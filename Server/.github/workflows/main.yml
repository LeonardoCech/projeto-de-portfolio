name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'pyproject.toml'
  pull_request:
    branches:
      - master

jobs:
  build-and-push-production:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          pytest --junitxml=results.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: results.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        env:
          GOOGLE_CREDENTIALS_PRODUCTION: ${{ secrets.GOOGLE_CREDENTIALS_PRODUCTION }}
        run: |
          mkdir -p /tmp && echo "$GOOGLE_CREDENTIALS_PRODUCTION" > /tmp/gcloud-key.json
          gcloud auth activate-service-account --key-file /tmp/gcloud-key.json
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud --quiet auth configure-docker ${{ secrets.LOCATION }}-docker.pkg.dev

      - name: Build and Push Docker Image (Production)
        env:
          DOCKER_BUILDKIT: 0
        run: |
          docker build --build-arg ENV="production" --build-arg CRED="${{ secrets.GOOGLE_CREDENTIALS_PRODUCTION }}" -t ${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.IMAGE_NAME }}:latest -t ${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.IMAGE_NAME }}:latest
          docker push ${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
